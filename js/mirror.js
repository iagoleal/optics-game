// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module('Mirror');

  Mirror.Plane = (function(_super) {
    __extends(Plane, _super);

    function Plane() {
      _ref = Plane.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Plane.prototype.type = "Mirror";

    Plane.prototype.height = 4;

    Plane.prototype.reflect = function(ang) {
      var mangle;
      mangle = this.angle <= Math.PI ? this.angle : this.angle - Math.PI;
      mangle = this.angle - Math.PI / 2;
      console.log("a", (2 * Math.PI - ang + 2 * mangle) * 180 / Math.PI);
      return Geometry.reduceAngle(2 * Math.PI - ang + 2 * mangle);
    };

    Plane.prototype.draw = function(context) {
      drawer.rectangle(context, "stroke", this.angle, this.position, this.width, this.height, {
        color: 'white',
        shadow: {
          color: '#fff',
          offsetX: 0,
          offsetY: 0,
          blur: 10
        }
      });
      return drawer.distance(context, this.angle, this.position, 100, {
        color: 'white'
      });
    };

    return Plane;

  })(Geometry.Rectangle);

}).call(this);
