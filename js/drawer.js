// Generated by CoffeeScript 1.6.3
(function() {
  var Drawer;

  Drawer = (function() {
    function Drawer() {}

    Drawer.prototype.angleMod = Math.PI / 180;

    Drawer.prototype.setOptions = function(context, options) {
      var index, j, option, shadowOption, _results;
      _results = [];
      for (index in options) {
        option = options[index];
        switch (index) {
          case "color":
            _results.push(context.strokeStyle = option);
            break;
          case "width":
            _results.push(context.lineWidth = option);
            break;
          case "shadow":
            _results.push((function() {
              var _results1;
              _results1 = [];
              for (j in option) {
                shadowOption = option[j];
                switch (j) {
                  case "blur":
                    _results1.push(context.shadowBlur = shadowOption);
                    break;
                  case "color":
                    _results1.push(context.shadowColor = shadowOption);
                    break;
                  case "offsetX":
                    _results1.push(context.shadowOffsetX = shadowOption);
                    break;
                  case "offsetY":
                    _results1.push(context.shadowOffsetY = shadowOption);
                    break;
                  default:
                    _results1.push(void 0);
                }
              }
              return _results1;
            })());
            break;
          default:
            _results.push(void 0);
        }
      }
      return _results;
    };

    Drawer.prototype.line = function(context, start, end, options) {
      if (options == null) {
        options = {};
      }
      this.setOptions(context, options);
      context.beginPath();
      context.moveTo(start.x, start.y);
      context.lineTo(end.x, end.y);
      context.closePath();
      return context.stroke();
    };

    Drawer.prototype.rectangle = function(context, type, angle, center, width, height) {
      context.save();
      context.translate(center.x, center.y);
      context.rotate(angle * this.angleMod);
      context.rect(-width / 2, -height / 2, width, height);
      if (type === "stroke") {
        context.stroke();
      } else {
        context.fill();
      }
      return context.restore();
    };

    Drawer.prototype.polygon = function(context, type, angle, center, sides, radius) {
      var a, i, _i;
      context.save();
      context.translate(center.x, center.y);
      context.rotate(angle * this.angleMod);
      a = (Math.PI * 2) / sides;
      context.beginPath();
      context.moveTo(radius, 0);
      for (i = _i = 1; 1 <= sides ? _i <= sides : _i >= sides; i = 1 <= sides ? ++_i : --_i) {
        context.lineTo(radius * Math.cos(a * i), radius * Math.sin(a * i));
      }
      context.closePath();
      if (type === "stroke") {
        context.stroke();
      } else {
        context.fill();
      }
      return context.restore();
    };

    Drawer.prototype.image = function(context, img, angle, center, width, height) {
      context.save();
      context.translate(center.x, center.y);
      context.rotate(angle * this.angleMod);
      context.drawImage(img, -width / 2, -height / 2, width, height);
      return context.restore();
    };

    return Drawer;

  })();

  window.drawer = new Drawer;

}).call(this);
